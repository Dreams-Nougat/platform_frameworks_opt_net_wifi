Revision: b9f326b3ef1be3bafae2f5cbb89a7831cccc24db
Patch-set: 3
File: service/java/com/android/server/wifi/WifiConfigManager.java

826
Thu Dec 01 23:50:36 2016 +0000
Author: Roshan Pius <1074459@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: cd47938e_905c989d
Bytes: 341
Similar to lorenzo@ question, when does settings app set this parameter? Is it during network addition or will it come as an update later. The change here will only work if it only comes as a part of addition. If u want to modify these in updates, u should add that in (updateExistingInternalWifiConfigurationFromExternal) in line 855 below.

826
Wed Dec 07 20:54:02 2016 +0000
Author: Stephen Chen <1124150@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: cd47938e_905c989d
UUID: ad1edff1_d72348bc
Bytes: 4
Done

File: service/java/com/android/server/wifi/WifiStateMachine.java

5305:23-5305:34
Thu Dec 01 00:09:28 2016 +0000
Author: Roshan Pius <1074459@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: cd47938e_a1d19ae9
Bytes: 114
config.meteredHint is used to set in mWifiInfo.setMeteredHint at line 3191. Do we need to again check for it here?

5305:23-5305:34
Thu Dec 01 01:12:24 2016 +0000
Author: Stephen Chen <1124150@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: cd47938e_a1d19ae9
UUID: cd47938e_e4b290c5
Bytes: 119
Could config.meteredHint be set and potentially not trigger a supplicant state change? It seems safer to check it again

5305:23-5305:34
Thu Dec 01 17:11:36 2016 +0000
Author: Lorenzo Colitti <1000835@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: cd47938e_e4b290c5
UUID: cd47938e_8429079d
Bytes: 239
How does config.meteredHint change? Will the settings UI write it into the config store directly? If so, then it can race with the WifiStateMachine thread and we cannot guarantee that mWifiInfo.getMeteredHint() will be correct at any time.

5305:23-5305:34
Wed Dec 07 20:54:02 2016 +0000
Author: Stephen Chen <1124150@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: cd47938e_8429079d
UUID: ad1edff1_f129bc4c
Bytes: 510
config.meteredHint changes via ExternalScoreEvaluator, which calls WifiConfigManager#addOrUpdateNetwork. handleSupplicantStateChange will in turn update the capabilities to match when a connection is made. The Settings UI will also call the same method to update config.meteredOverride.

It is worth noting that this means when user toggles a network as metered within Settings UI, the capability change will only happen on the next connection. That seems acceptable because the UI is not used often, thoughts?

5305:23-5305:34
Thu Dec 08 23:49:22 2016 +0000
Author: Lorenzo Colitti <1000835@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ad1edff1_f129bc4c
UUID: 2d3f4f99_6eb36fcb
Bytes: 584
Actually, if I'm reading the code correctly, it doesn't seem hard to have this take effect dynamically.

If you make the settings UI call WifiManager#updateNetwork, then it will result in WifiStateMachine getting CMD_ADD_OR_UPDATE_NETWORK and calling WifiConfigManager#addOrUpdateNetwork for you, on the right thread.

Then all you need to do is make sure that the handling code for CMD_ADD_OR_UPDATE_NETWORK calls updateCapabilities() if the update succeeded and the network is the current network. Then the metered bit will be updated properly.

Roshan, I assume this is safe to do?

5305:23-5305:34
Fri Dec 09 02:05:22 2016 +0000
Author: Roshan Pius <1074459@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2d3f4f99_6eb36fcb
UUID: 3a26a7ad_7f2c03c9
Bytes: 124
Yeah. That's safe. You can use |mLastNetworkId| to check if the network being updated is the currently connected network ID.

5305:23-5305:34
Fri Dec 09 23:31:50 2016 +0000
Author: Stephen Chen <1124150@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3a26a7ad_7f2c03c9
UUID: 3a26a7ad_874ae99e
Bytes: 4
Done


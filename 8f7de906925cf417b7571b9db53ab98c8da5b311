Revision: 8f7de906925cf417b7571b9db53ab98c8da5b311
Patch-set: 1
File: service/java/com/android/server/wifi/WifiStateMachine.java

2132
Thu Dec 01 22:37:52 2016 +0000
Author: Randy Pan <1086611@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: cd47938e_69a76cf4
Bytes: 332
I thought we are moving this LocalLog dump to WifiService. If the goal is just to remove mWifiNetworkSelector from WSM constructor, we can do something like "mWifiInjector.getWifiNetworkSelector().dump()" here. This way we don't need to make that change to WifiConnectivityManager which simply calls into WifiNetworkSelector.dump().

2132
Thu Dec 01 23:27:30 2016 +0000
Author: Rebecca Silberstein <1081395@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: cd47938e_69a76cf4
UUID: cd47938e_ed10a715
Bytes: 892
I put this in the bug already, but I did try this initially.  WifiServiceImpl doesn't have an instance of NetworkSelector either, so it seems odd to put it there.  Additionally, I also noticed that NetworkSelector in the main holder of the LocalLog instance and ConnectivityManager is using the same LocalLog.  This doesn't make a lot of sense.  If ConnectivityManager is the one holding on to and directly calling NetworkSelector, then it should probably be the owner of the log and do the dump call.  Having another class reach around ConnectivityManager to get to NetworkSelector (via WifiInjector) is a bit convoluted.  I am hoping this will be more clear after I get more of the WSM refactor done and then hopefully ConnectivityManager will be a better cut of a subset of code.  For now, I am just trying to get another variable out of WSM and don't want to just stick it in ServiceImpl.

2132
Thu Dec 01 23:57:22 2016 +0000
Author: Randy Pan <1086611@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: cd47938e_ed10a715
UUID: cd47938e_f0b23c97
Bytes: 310
Sorry, I missed your comment in the bug. WifiConnectivityManager and WifiNetworkSelector share a local buffer. However WifiConnectivityManager depends on WifiNetworkSelector, which is initialized then passed to WifiConnectivityManager constructor. That's why the local buffer is created in WifiNetworkSelector.

2132
Fri Dec 02 01:29:43 2016 +0000
Author: Rebecca Silberstein <1081395@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: cd47938e_f0b23c97
UUID: cd47938e_96e130b9
Bytes: 312
NetworkSelector is created in WifiInjector, but the only class that directly interacts with it is ConnectivityManager.  No one else holds the NetworkSelector and it is pretty unnatural for another class to reach around ConnectivityManager to get to it.  (It is possible thanks to WifiInjector, but it is awkward.

2132
Fri Dec 02 04:43:27 2016 +0000
Author: Randy Pan <1086611@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: cd47938e_96e130b9
UUID: cd47938e_bcdb6b09
Bytes: 543
Depending on how you look at it, WifiNetworkSelector(WNS) and WifiConnectivityManager(WCM) are literally two entities. The job of WNS is to evaluate scan results, regardless of whether they come from WCM or other modules (for example in WNS unit tests the scan results are all mocked and WCM is not there at all). The job of WCM is mainly to schedule connectivity scans. Each class used to have its own LocalLog buffer. We consolidate them into one recently just to make better use of the memory. WNS doesn't have to be always reached via WCM.

2132
Fri Dec 02 06:26:51 2016 +0000
Author: Rebecca Silberstein <1081395@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: cd47938e_bcdb6b09
UUID: cd47938e_fcf05322
Bytes: 133
I am missing another path then, can you point out where it is being called or design docs for where it is planning to be called from?

2132
Fri Dec 02 07:28:20 2016 +0000
Author: Rebecca Silberstein <1081395@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: cd47938e_fcf05322
UUID: cd47938e_3c38fbe4
Bytes: 456
One additional question about an alternate place to call NetworkSelector from, if that does happen, then won't the logs from ConnectivityManager be mixed in?  If there is to be a separate call path, then we potentially should have CM share with WSM and NS have an independent call.  Mixing the two and then arguing they should be separate seems a bit confusing.

In the end, won't they move to the alternate logging service and make this decision obsolete?

2132
Fri Dec 02 18:39:44 2016 +0000
Author: Randy Pan <1086611@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: cd47938e_3c38fbe4
UUID: 8decbb0b_11634cf2
Bytes: 372
The CL makes sense now after I understand what you are doing to clean up WSM. Since WSM is no longer calling into WifiInjector#getWifiNetworkSelector, we can remove "when(mWifiInjector.getWifiNetworkSelector()).thenReturn(mock(WifiNetworkSelector.class));" from WifiStateMachineTest.java. Also it would be good if we just remove getWifiNetworkSelector() from WifiInjector.

2132
Fri Dec 02 18:53:35 2016 +0000
Author: Rebecca Silberstein <1081395@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 8decbb0b_11634cf2
UUID: 8decbb0b_513af488
Bytes: 352
We can do the cleanup for WifiInjector after I switch over.  I am not actually changing WSM in its current state, I am incrementally building the new code in parallel and will switch over at a later date.  This allows me to continue with my development of ClientMode without losing the logs held in the shared LocalLog (or forgetting to call it later).


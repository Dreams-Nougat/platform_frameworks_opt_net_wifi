Revision: 3faf231010cef5026b97a6814f83df23536e189a
Patch-set: 2
File: service/java/com/android/server/wifi/RecommendedNetworkEvaluator.java

104:0-106:9
Thu Dec 08 22:19:54 2016 +0000
Author: Randy Pan <1086611@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ad1edff1_cbe39118
Bytes: 108
Is this RecommendedNetworkEvaluator going to handle networks that are saved but marked as externally scored?

106
Thu Dec 08 22:48:43 2016 +0000
Author: Amin Shaikh <1122613@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ad1edff1_cbe39118
UUID: ad1edff1_dda7d88d
Bytes: 12
Yes it will.

106
Thu Dec 08 23:18:45 2016 +0000
Author: Randy Pan <1086611@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ad1edff1_dda7d88d
UUID: ad1edff1_1da790a2
Bytes: 329
Can you describe the behavior of NetworkScoreManager#requestRecommendation when the scan results contain a mix of saved but externally scored networks and ephemeral networks? In the scenario of untrusted networks allowed and not allowed.

Also, how does NetworkScoreManager tell which ones are ephemeral and which ones are saved?

106
Fri Dec 09 01:46:47 2016 +0000
Author: Amin Shaikh <1122613@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ad1edff1_1da790a2
UUID: 3a26a7ad_bf2a9bed
Bytes: 1553
NetworkScoreManager#requestRecommendation calls through to the current NetworkRecommendationProvider (not implemented yet). The implementors of NetworkRecommendationProvider will receive the RecommendationResult and pass back a recommended network in the form of a RecommendationResult. See go/intelligent-network-selection-dd for more details on this plumbing.

The implementors of NetworkRecommendationProvider will query WifiManager#getConfiguredNetworks to determine whether a ScanResult corresponds to a saved network. For ephemeral, it looks like we'll have to expose the ephemeral bit as a @SystemApi so the provider can access it.

When untrusted networks are not allowed, the NetworkRecommendationProvider will use similar logic to SavedNetworkEvaluator to choose a WifiConfiguration out of the current user's saved networks (and ignore open, unsaved networks). If network scores are available, this information will also be used in ranking.

When untrusted networks are allowed, network scores will be used to rank open networks as well as saved networks. The exact logic is TBD on exactly how this will work, but the initial code will preserve the current functionality of ExternalNetworkEvaluator. If an untrusted network is chosen, an ephemeral WifiConfiguration will be created through WifiManager#addNetwork and then returned by the API. It looks like we'll also have to expose NetworkSelectionStatus as a @SystemApi so that the ScanResult candidate can be returned. Alternatively, we could just add another field to RecommendationResult.

File: service/java/com/android/server/wifi/WifiConnectivityManager.java

472:49-472:88
Thu Dec 08 22:19:54 2016 +0000
Author: Randy Pan <1086611@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ad1edff1_106778d0
Bytes: 167
Why this evaluator specific input parameter needs to be passed down via WifiConnectivityManager? Can't RecommendedNetworkEvaluator obtain it via NETWORK_SCORE_SERVICE?

472
Thu Dec 08 22:48:43 2016 +0000
Author: Amin Shaikh <1122613@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ad1edff1_106778d0
UUID: ad1edff1_3d1b745b
Bytes: 607
RecommendedNetworkEvaluator could obtain NetworkScoreManager from Context, but it is better to inject direct dependencies instead of indirect ones. go/di-practices/inject-direct-dependencies

Using that logic, it would make more sense to actually inject SavedNetworkEvaluator, RecommendedNetworkEvaluator and ExternalScoreEvaluator directly into WifiConnectivityManager instead of constructing those objects within this constructor. I'd be happy to make that change in this commit if you agree. That would remove the WifiNetworkScoreCache and NetworkScoreManager arguments and add ones for the 3 evaluators.

472
Thu Dec 08 23:18:45 2016 +0000
Author: Randy Pan <1086611@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ad1edff1_3d1b745b
UUID: ad1edff1_a05af798
Bytes: 78
Thanks for the link to the DIP doc. Sure, let's follow the coding style guide.

472
Fri Dec 09 01:46:47 2016 +0000
Author: Amin Shaikh <1122613@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ad1edff1_a05af798
UUID: 3a26a7ad_399eaba2
Bytes: 4
Done

527
Thu Dec 08 19:55:54 2016 +0000
Author: Paul Stewart <1077073@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ad1edff1_ca9b8f5d
Bytes: 228
Why does WifiConnectivityManager need to know whether ExternalScoreEvaluator or RecommendedNetworkEvaluator should be employed?  Shouldn't this be an implementation detail of ExternalScoreEvaluator, or perhaps an factory object?

527
Thu Dec 08 20:59:43 2016 +0000
Author: Amin Shaikh <1122613@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ad1edff1_ca9b8f5d
UUID: ad1edff1_b061ec4f
Bytes: 529
The goal is to fully replace ExternalScoreEvaluator with RecommendedNetworkEvaluator. The logic for using external scores to recommend a WifiConfiguration will be pushed to the implementors of INetworkRecommendationProvider.

After b/33224286 is fixed, the logic here will simply add a NetworkRecommendationEvaluator to WifiNetworkSelector if NETWORK_RECOMMENDATIONS_ENABLED is set (ExternalScoreEvaluator will be deleted).  I think this an appropriate place to put this logic since all of the NetworkEvaluators are created here.


Revision: 8f78374516d67e42e539786b5b5a1882954a631f
Patch-set: 4
File: service/java/com/android/server/wifi/WifiInjector.java

141:62-141:78
Fri Dec 09 23:29:46 2016 +0000
Author: Paul Stewart <1077073@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3a26a7ad_cc980862
Bytes: 352
The use of getSystemService here has the implication that this service exists and has started before the instance of WifiInjector is created.  The only other place where getSystemService is called in this module has a TODO to resolve such a dependency.  We need to be careful not to add any more of these without carefully considering the consequences.

File: service/java/com/android/server/wifi/WifiNotificationController.java

251
Fri Dec 09 19:58:56 2016 +0000
Author: Paul Stewart <1077073@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3a26a7ad_7328b74b
Bytes: 139
Rather than nest more conditionals making this method larger, can you factor this method out so it doesn't continue to get more cumbersome?

251
Fri Dec 09 22:28:30 2016 +0000
Author: Stephen Chen <1124150@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3a26a7ad_7328b74b
UUID: 3a26a7ad_911c6b93
Bytes: 4
Done

257
Fri Dec 09 19:58:56 2016 +0000
Author: Paul Stewart <1077073@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3a26a7ad_53d13b0e
Bytes: 785
It seems like this logic sitting here in the notification controller is a bit awkward.  First you filter for open networks, then you request scores for those open networks from the score manager, and then you ask the score cache to get to get a network score for each of these open networks (presuming, I think that the score manager is related to the score cache in some way not visible to the notification controller).

It would make more sense to me and anyone reading this code that we'd ask some facility opaque to WifiNotificationController how confident it was that there were good networks to associate to, given the scan results.  Within here you could also encapsulate concepts of whether this device had a suitable scoring mechanism and what to do under those circumstances.

257
Fri Dec 09 22:28:30 2016 +0000
Author: Stephen Chen <1124150@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3a26a7ad_53d13b0e
UUID: 3a26a7ad_513ff3c8
Bytes: 124
Makes sense to pull this out, but will tackle this in a separate CL since it could potentially live outside of opt/net/wifi.

File: tests/wifitests/src/com/android/server/wifi/WifiNotificationControllerTest.java

114:23-114:39
Fri Dec 09 19:58:56 2016 +0000
Author: Paul Stewart <1077073@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3a26a7ad_1354e314
Bytes: 705
Having a refactor here makes sense.  However the way you've done it creates an asymmetry.  There are some sequences of calls where:

   when(mWifiScanner.getSingleScanResults()).thenReturn(scanResults);

needs to be called by the test implementation, and other situations where it does not.  Also "createScanResult" (as opposed to "setOpenAccessPoint") loses the information that the scan result being created is open.

Could you restructure these methods so that their usage is more consistent?  For example "addOpenAccessPoint" and "addOpenAccessPointWithScore" might be one way, although you'll need to make decisions about the storage ownership of "scanResult".  Having it class-wide might make sense.

114:23-114:39
Fri Dec 09 22:28:30 2016 +0000
Author: Stephen Chen <1124150@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3a26a7ad_1354e314
UUID: 3a26a7ad_91c0eb1f
Bytes: 4
Done

